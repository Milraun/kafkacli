syntax = "proto3";

package eu.vmis_ehe.vmis2.control.data;

import "CommonControlData.proto";
import "GeoReference.proto";
import "heuboe/protobuf/InterfaceVersion.proto";

option java_multiple_files = true;
option java_outer_classname = "InfrastructureProto";
option csharp_namespace = "eu.vmis_ehe.vmis2.control.data";
option (.heuboe.protobuf.interface_version) = "1.17.0";

//Symbols for display panel
message DisplayPanelSymbolWrapper{
	enum DisplayPanelSymbol{
		NONE = 0;
		SPEED_LIMIT_40_KMH = 1;             
        SPEED_LIMIT_60_KMH = 2;            
        SPEED_LIMIT_80_KMH = 3;            
        SPEED_LIMIT_100_KMH = 4;             
        SPEED_LIMIT_120_KMH = 5;    
        END_SPEED_LIMIT_60_KMH = 6;       
        ARROW_LEFT = 7;             
        ARROW_RIGHT = 8;             
        RED_X = 9;             
        JAM = 10;
        ROADWORKS = 11;
        DANGER = 12;
        TEXT_JAM = 13;
        TEXT_ACCIDENT = 14;
        }
}

//Type of display panel
//REVIEW: 22.3.2019 Wenn Enums nur an einer Stelle benötigt werden sollten sie evtl. auch dort definiert werden.
//REVIEW: 22.3.2019 Es wäre auch einmal zu Testen, ob durch die Wrapper durch die Benutzung von package anstatt java_package
//REVIEW: 22.3.2019 obsolet werden. Siehe EnumPackageTest auf diesem Branch
message DisplayPanelTypeWrapper{
	enum DisplayPanelType {
		WZG_A = 0;             // WZG type A
        WZG_B = 1;             // WZG type B
        WZG_C = 2;             // WZG type C
        }
}

enum LaneRelation {
    UNKNOWN_RELATION = 0;
    MAIN = 1;                       // 'main' lane: use LanePos' index to describe which one, where '0' would be rightmost
                                    //      -1: All (e.g. for info boards above all lanes)
    BETWEEN = 2;                    // 'between' two lanes, where index = 0 would be 'between right shoulder and first main lane'
    RIGHTSHOULDER = 3;              // anything right of main lanes
    LEFTSHOULDER = 4;               // anything left of main lanes
    ALL = 5;                        // covering all available lanes
}

//road
message RoadData {
	TwoPartIdentification id = 1;							//id of the road
	string name = 2;										//name of the road
	ValiditySection validity_section = 3;		//validity section of the road
	repeated Junction junctions = 4;						//junctions of road
	repeated DisplayPanelSite display_panel_sites = 5;		// display panel sites of the road.

}

//Logical kilometer position on a road
message LogKm {
    double log_km = 1;										//Logical kilometer position on the road
    string road_id = 2;										//Road id
}

//Junction with logical kilometer position on a road
message Junction  {
    TwoPartIdentification two_part_id = 1;					//Unique two_part_id of the junction
    string name = 2;										//Name of the junction
    LogKm roadEnds= 3;										//Logical kilometer position of road that ends in the junction
    LogKm roadStarts= 4;									//Logical kilometer position of road that starts at the junction
}

/* Display panel site with logical kilometer position on a road,
* nested display panel and connected display panel site.*/

message DisplayPanelSite {
	TwoPartIdentification two_part_id = 1;					//Unique two_part_id of the display panel site
	string name = 2;										//Name of the display panel site
	LogKm position = 3;										//Logical kilometer position of the display panel site
	repeated DisplayPanel display_panels = 4; 				//Display panels of the display panel site
	repeated TwoPartIdentification predecessors = 5; 		//Predecessors display panel sites of the display panel site
	repeated TwoPartIdentification successors = 6; 			//Successors display panel sites of the display panel site

}

// Display panel with connected display panel symbol set and priority table
//REVIEW: 22.3.2019 Interessiert uns die Lage, sprich wo hängt Schild? Chris hat im ConfigService mal einen Vorschlag gemacht dies zu beschreiben.

message DisplayPanel {
	TwoPartIdentification two_part_id = 1;					//Unique two_part_id of the display panel
	string name = 2;										//Name of the display panel
	DisplayPanelTypeWrapper.DisplayPanelType type = 3;		//Type of the display panel
	TwoPartIdentification symbol_set  = 4; 					//Two_part_id of the symbol_set of the display panel
	TwoPartIdentification priority_table  = 5; 				//Two_part_id of the priority_table of the display panel
	LanePos lane_pos = 6;

}

message LanePos {
    LaneRelation lane_rel = 1;      // lane relation
    int32 index = 2;                // index, counting from right: 0 = rightmost lane, or between right shoulder and first main lane 
    int32 loc_index = 3;            // used when there's more than one element at a specified position, e.g. when stacking
                                    //   signs 'between' lanes, counting from bottom up
}

//display panel symbol set for display panels a-c
message DisplayPanelSymbolSet {
	TwoPartIdentification two_part_id = 1;													//Unique two_part_id of the display panel symbol set
	repeated DisplayPanelSymbolWrapper.DisplayPanelSymbol display_panel_symbols_a = 2;		//display panel symbol set for the display panel A
	repeated DisplayPanelSymbolWrapper.DisplayPanelSymbol display_panel_symbols_b = 3;		//display panel symbol set for the display panel B
	repeated DisplayPanelSymbolWrapper.DisplayPanelSymbol display_panel_symbols_c = 4; 		//display panel symbol set for the display panel C
}

//display panel priority table  for display panels a-c
message DisplayPanelPriorityTable {
	TwoPartIdentification two_part_id = 1;										//unique two_part_id of the display panel priority table
	repeated DisplayPanelSymbolPriority display_panel_symbol_priority_a = 2;	//List of priority of the display panel symbols of display panel A
	repeated DisplayPanelSymbolPriority display_panel_symbol_priority_b = 3;	//List of priority of the display panel symbols of display panel B
	repeated DisplayPanelSymbolPriority display_panel_symbol_priority_c = 4; 	//List of priority of the display panel symbols of display panel C
}

//display panel symbol and its priority
message DisplayPanelSymbolPriority {
	DisplayPanelSymbolWrapper.DisplayPanelSymbol display_panel_symbol = 1;	//display panel symbol 
	int32 priority = 2;														//priority of display panel symbol 
}
